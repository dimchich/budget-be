tags:
- name: users
  description: users API
- name: groups
  description: groups API

paths:
# [GET] users
  /users:
    get:
      tags:
      - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] users
    post:
      tags:
      - users
      summary: Add User
      parameters:
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /users/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        404:
          description: 'Not found'
        500:
          description: 'Server Error'

# [PUT] users/id
    put:
      tags:
      - users
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] users/id
    delete:
      tags:
      - users
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] groups
  /groups:
    get:
      tags:
      - groups
      summary: Find all groups
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server error'
# [POST] groups
    post:
      tags:
      - groups
      summary: Add group
      parameters:
      - name: body
        in: body
        description: group Data
        required: true
        schema:
          $ref: '#definitions/groups'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad request'

# [GET] groups/id
  /groups/{id}:
    get:
      tags:
      - groups
      summary: Find group by Id
      parameters:
      - name: id
        in: path
        description: Group id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        404:
          description: 'Not found'

# [PUT] groups/id
    put:
      tags:
      - groups
      summary: Update group by Id
      parameters:
      - name: id
        in: path
        description: Group id
        required: true
        type: integer
      - name: body
        in: body
        description: group Data
        required: true
        schema:
          $ref: '#definitions/groups'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad request'
        404:
          description: 'Not found'
      
# [DELETE] groups/id
    delete:    
      tags:
      - groups
      summary: Update group by Id
      parameters:
      - name: id
        in: path
        description: Group id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        404:
          description: 'Not found'

# definitions
definitions:
  users:
    type: object
    required:
        - email
        - password
    properties:
      id:
        type: integer
        description: user Id
      email:
        type: string
        description: user Email
      password:
        type: string
        description: user Password
  
  groups:
    type: object
    required:
      - name
      - author
    properties:
      name:
        type: string
        description: group Name
      author:
        type: integer
        description: author Id
  groupsDto:
    type: object
    required:
      - name
      - authorId
    properties:
      id:
        type: integer
        description: group Id
      name:
        type: string
        description: group Name
      authorId:
        type: integer
        description: author Id
schemes:
 - https
 - http
